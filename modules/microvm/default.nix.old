{ inputs, ... }:

{
  imports = [ inputs.microvm.nixosModules.host ];

  systemd.network = {
    netdevs."10-microvm".netdevConfig = {
      Kind = "bridge";
      Name = "microvm";
    };
    networks."10-microvm" = {
      matchConfig.Name = "microvm";
      networkConfig = {
        DHCPServer = true;
        IPv6SendRA = true;
      };
      addresses = [ {
        addressConfig.Address = "10.0.0.1/24";
      } {
        addressConfig.Address = "fd12:3456:789a::1/64";
      } ];
      ipv6Prefixes = [ {
        ipv6PrefixConfig.Prefix = "fd12:3456:789a::/64";
      } ];
    };
  };
  
  # Allow inbound traffic for the DHCP server
  networking.firewall.allowedUDPPorts = [ 67 ];


  systemd.network.networks."10-lan" = {
    matchConfig.Name = ["wlan0" "vm-*"];
    networkConfig = {
      Bridge = "br0";
    };
  };
  
  systemd.network.netdevs."br0" = {
    netdevConfig = {
      Name = "br0";
      Kind = "bridge";
    };
  };
  
  systemd.network.networks."10-lan-bridge" = {
    matchConfig.Name = "br0";
    networkConfig = {
      Address = ["192.168.1.2/24" "2001:db8::a/64"];
      Gateway = "192.168.1.1";
      DNS = ["192.168.1.1"];
      IPv6AcceptRA = true;
    };
    linkConfig.RequiredForOnline = "routable";
  };

  microvm.vms = {
    router = {
      config = {
        system.stateVersion = "24.05";
        networking.hostName = "router";
        users.users.root.password = "test123";
        services.openssh = {
          enable = true;
          settings.PermitRootLogin = "yes";
        };
        networking.firewall.enable = false;
        systemd.network = {
          enable = true;
          networks."20-lan" = {
            matchConfig.Type = "ether";
            networkConfig = {
              Address = ["192.168.1.3/24" "2001:db8::b/64"];
              Gateway = "192.168.1.1";
              DNS = ["192.168.1.1"];
              IPv6AcceptRA = true;
              DHCP = "no";
            };
          };
        };
        microvm = {
          shares = [{
            source = "/nix/store";
            mountPoint = "/nix/.ro-store";
            tag = "ro-store";
            proto = "virtiofs";
          }];
          interfaces = [
            {
              type = "tap";
              id = "vm-test1";
              mac = "02:00:00:00:00:01";
            }
          ];
        };
      };
    };
  };
}
