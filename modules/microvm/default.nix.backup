{ inputs, ... }:

{
  imports = [ inputs.microvm.nixosModules.host ];

  systemd.network = {
    netdevs."10-microvm".netdevConfig = {
      Kind = "bridge";
      Name = "microvm";
    };
    networks."10-microvm" = {
      matchConfig.Name = "microvm";
      networkConfig = {
        DHCPServer = true;
        IPv6SendRA = true;
      };
      addresses = [
        { addressConfig.Address = "10.0.0.1/24"; }
        { addressConfig.Address = "fd12:3456:789a::1/64"; }
      ];
      ipv6Prefixes = [
        { ipv6PrefixConfig.Prefix = "fd12:3456:789a::/64"; }
      ];
    };
    networks."11-microvm" = {
      matchConfig.Name = "vm-*";
      networkConfig.Bridge = "microvm";
    };
  };

  # Allow inbound traffic for the DHCP server
  networking.firewall.allowedUDPPorts = [ 67 ];

  networking.nat = {
    enable = true;
    enableIPv6 = true;
    externalInterface = "wlan0";
    internalInterfaces = [ "microvm" ];
  };

  microvm.vms = {
    router = {
      config = {
        system.stateVersion = "24.05";
        systemd.network.enable = true;
        networking.firewall.enable = false;
        networking.hostName = "router";
        users.users.root.password = "test123";
        services.openssh = {
          enable = true;
          settings.PermitRootLogin = "yes";
        };
        microvm = {
          shares = [{
            source = "/nix/store";
            mountPoint = "/nix/.ro-store";
            tag = "ro-store";
            proto = "virtiofs";
          }];
          interfaces = [
            {
              type = "tap";
              id = "vm-test1";
              mac = "02:00:00:00:00:01";
            }
          ];
        };
      };
    };
  };
}
